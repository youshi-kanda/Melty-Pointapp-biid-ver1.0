name: Build & Test - Terminal Backend

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - 'production/terminal-backend/**'
      - '.github/workflows/build-terminal-backend.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - 'production/terminal-backend/**'
  workflow_call:

env:
  SERVICE_NAME: terminal-backend
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/terminal-backend

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install dependencies
        run: |
          cd backend
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 black pytest pytest-django

      - name: Run linting (flake8)
        run: |
          cd backend
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run code formatting check (black)
        run: |
          cd backend
          black --check . || true

      - name: Run tests
        env:
          DJANGO_SETTINGS_MODULE: pointapp.settings
          SECRET_KEY: test-secret-key-for-ci
          DEBUG: True
        run: |
          cd backend
          python manage.py test --no-input

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./production/terminal-backend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_DATE=${{ github.event.head_commit.timestamp }}
            VCS_REF=${{ github.sha }}

      - name: Image digest
        if: github.event_name != 'pull_request'
        run: echo "Image pushed with digest ${{ steps.build.outputs.digest }}"
