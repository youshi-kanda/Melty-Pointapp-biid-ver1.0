# Generated by Django migration system

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0014_ec_point_award_system'),
    ]

    operations = [
        migrations.AddField(
            model_name='blockeduser',
            name='automatic_block',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='blockeduser',
            name='severity_level',
            field=models.CharField(
                choices=[
                    ('low', '低'),
                    ('medium', '中'),
                    ('high', '高'),
                    ('critical', '重大')
                ],
                default='low',
                max_length=20
            ),
        ),
        migrations.AddField(
            model_name='blockeduser',
            name='expires_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='blockeduser',
            name='admin_notes',
            field=models.TextField(blank=True),
        ),
        migrations.AddIndex(
            model_name='blockeduser',
            index=models.Index(fields=['expires_at'], name='core_blocke_expires_idx'),
        ),
        
        # NotificationPreference拡張
        migrations.AddField(
            model_name='notificationpreference',
            name='digest_frequency',
            field=models.CharField(
                choices=[
                    ('immediate', '即座'),
                    ('hourly', '1時間ごと'),
                    ('daily', '1日ごと'),
                    ('weekly', '1週間ごと'),
                    ('never', '送信しない')
                ],
                default='immediate',
                max_length=20
            ),
        ),
        migrations.AddField(
            model_name='notificationpreference',
            name='quiet_hours_start',
            field=models.TimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='notificationpreference',
            name='quiet_hours_end',
            field=models.TimeField(blank=True, null=True),
        ),
        
        # Notification拡張
        migrations.AddField(
            model_name='notification',
            name='email_sent',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='notification',
            name='push_sent',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='notification',
            name='email_sent_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='notification',
            name='push_sent_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='notification',
            name='delivery_attempts',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='notification',
            name='last_delivery_error',
            field=models.TextField(blank=True),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['priority', 'email_sent'], name='core_notifi_priority_email_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['priority', 'push_sent'], name='core_notifi_priority_push_idx'),
        ),
        
        # セキュリティ関連新モデル
        migrations.CreateModel(
            name='SecurityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=100)),
                ('severity', models.CharField(
                    choices=[
                        ('info', '情報'),
                        ('warning', '警告'),
                        ('error', 'エラー'),
                        ('critical', '重大')
                    ],
                    default='info',
                    max_length=20
                )),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('details', models.JSONField(blank=True, default=dict)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_by', models.ForeignKey(
                    blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                    related_name='resolved_security_logs', to=settings.AUTH_USER_MODEL
                )),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='security_logs', to=settings.AUTH_USER_MODEL
                )),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='securitylog',
            index=models.Index(fields=['user', 'severity', '-created_at'], name='core_securi_user_severity_idx'),
        ),
        migrations.AddIndex(
            model_name='securitylog',
            index=models.Index(fields=['action', '-created_at'], name='core_securi_action_idx'),
        ),
        migrations.AddIndex(
            model_name='securitylog',
            index=models.Index(fields=['is_resolved', '-created_at'], name='core_securi_resolved_idx'),
        ),
        
        # アクティビティスロットリング
        migrations.CreateModel(
            name='ActivityThrottle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(max_length=50)),
                ('count', models.IntegerField(default=1)),
                ('window_start', models.DateTimeField()),
                ('is_throttled', models.BooleanField(default=False)),
                ('throttled_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='activity_throttles', to=settings.AUTH_USER_MODEL
                )),
            ],
            options={
                'unique_together': {('user', 'activity_type', 'window_start')},
            },
        ),
        migrations.AddIndex(
            model_name='activitythrottle',
            index=models.Index(fields=['user', 'activity_type', 'window_start'], name='core_activi_user_activity_idx'),
        ),
        migrations.AddIndex(
            model_name='activitythrottle',
            index=models.Index(fields=['is_throttled', 'throttled_until'], name='core_activi_throttled_idx'),
        ),
        
        # コンテンツモデレーション
        migrations.CreateModel(
            name='ContentModerationQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('report_reason', models.CharField(
                    choices=[
                        ('spam', 'スパム'),
                        ('harassment', 'ハラスメント'),
                        ('inappropriate', '不適切な内容'),
                        ('misinformation', '誤情報'),
                        ('copyright', '著作権侵害'),
                        ('other', 'その他')
                    ],
                    max_length=50
                )),
                ('report_description', models.TextField(blank=True)),
                ('status', models.CharField(
                    choices=[
                        ('pending', '待機中'),
                        ('reviewing', 'レビュー中'),
                        ('approved', '承認'),
                        ('rejected', '拒否'),
                        ('removed', '削除')
                    ],
                    default='pending',
                    max_length=20
                )),
                ('review_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(
                    blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                    related_name='moderation_assignments', to=settings.AUTH_USER_MODEL
                )),
                ('content_type', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    to='contenttypes.contenttype'
                )),
                ('reported_by', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='reported_content', to=settings.AUTH_USER_MODEL
                )),
                ('reviewed_by', models.ForeignKey(
                    blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                    related_name='moderation_reviews', to=settings.AUTH_USER_MODEL
                )),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='contentmoderationqueue',
            index=models.Index(fields=['status', '-created_at'], name='core_conten_status_idx'),
        ),
        migrations.AddIndex(
            model_name='contentmoderationqueue',
            index=models.Index(fields=['assigned_to', 'status'], name='core_conten_assigned_status_idx'),
        ),
        migrations.AddIndex(
            model_name='contentmoderationqueue',
            index=models.Index(fields=['reported_by', '-created_at'], name='core_conten_reporter_idx'),
        ),
    ]