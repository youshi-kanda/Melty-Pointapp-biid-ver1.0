# Generated by Django 4.2.23 on 2025-07-29 05:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_gift_giftcategory_giftexchange_gift_category'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountRank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.CharField(choices=[('bronze', 'ブロンズ'), ('silver', 'シルバー'), ('gold', 'ゴールド'), ('platinum', 'プラチナ'), ('diamond', 'ダイヤモンド')], max_length=20, unique=True)),
                ('required_points', models.IntegerField()),
                ('required_transactions', models.IntegerField(default=0)),
                ('point_multiplier', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('privileges', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['required_points'],
            },
        ),
        migrations.CreateModel(
            name='APIAccessKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=40, unique=True)),
                ('partner_name', models.CharField(max_length=255)),
                ('shared_secret', models.CharField(max_length=255)),
                ('hash_algorithm', models.CharField(default='SHA1', max_length=10)),
                ('time_step', models.IntegerField(default=30)),
                ('totp_digits', models.IntegerField(default=6)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BlogTheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('primary_color', models.CharField(default='#ec4899', max_length=7)),
                ('secondary_color', models.CharField(default='#f43f5e', max_length=7)),
                ('accent_color', models.CharField(default='#8b5cf6', max_length=7)),
                ('background_color', models.CharField(default='#fdf2f8', max_length=7)),
                ('text_color', models.CharField(default='#1f2937', max_length=7)),
                ('font_family', models.CharField(default='Inter, sans-serif', max_length=255)),
                ('font_size_base', models.CharField(default='16px', max_length=10)),
                ('layout_type', models.CharField(choices=[('default', 'デフォルト'), ('sidebar', 'サイドバー'), ('grid', 'グリッド'), ('magazine', 'マガジン')], default='default', max_length=20)),
                ('custom_css', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_premium', models.BooleanField(default=False)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('logo_url', models.URLField(blank=True)),
                ('allowed_prices', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AddField(
            model_name='pointtransaction',
            name='refund_fee',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name='pointtransaction',
            name='refund_rate',
            field=models.DecimalField(decimal_places=2, default=100.0, max_digits=5),
        ),
        migrations.AddField(
            model_name='store',
            name='area',
            field=models.CharField(blank=True, choices=[('kitashinchi', '北新地'), ('minami', 'ミナミ'), ('shibuya', '渋谷'), ('ginza', '銀座'), ('omotesando', '表参道')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='store',
            name='deposit_auto_charge',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='store',
            name='deposit_auto_charge_amount',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name='store',
            name='deposit_balance',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name='user',
            name='backup_codes',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='user',
            name='failed_login_attempts',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='user',
            name='is_2fa_enabled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='last_failed_login',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='locked_until',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='rank',
            field=models.CharField(choices=[('bronze', 'ブロンズ'), ('silver', 'シルバー'), ('gold', 'ゴールド'), ('platinum', 'プラチナ'), ('diamond', 'ダイヤモンド')], default='bronze', max_length=20),
        ),
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.CharField(choices=[('customer', 'Customer'), ('store_manager', 'Store Manager'), ('admin', 'Admin'), ('terminal', 'Terminal')], default='customer', max_length=20),
        ),
        migrations.AddField(
            model_name='user',
            name='store',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='managers', to='core.store'),
        ),
        migrations.AddField(
            model_name='user',
            name='suspicious_activity_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='user',
            name='two_factor_secret',
            field=models.CharField(blank=True, max_length=32),
        ),
        migrations.CreateModel(
            name='UserPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField()),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_expired', models.BooleanField(default=False)),
                ('source_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.pointtransaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_points', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['expiry_date'],
            },
        ),
        migrations.CreateModel(
            name='UserBlogTheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchased_at', models.DateTimeField(auto_now_add=True)),
                ('theme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.blogtheme')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='blog_theme', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RefundRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_to_refund', models.IntegerField()),
                ('refund_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('refund_type', models.CharField(choices=[('cash', '現金払戻し'), ('bank_transfer', '銀行振込'), ('gift_card', 'ギフトカード')], max_length=20)),
                ('status', models.CharField(choices=[('pending', '申請中'), ('reviewing', '審査中'), ('approved', '承認済み'), ('rejected', '却下'), ('completed', '完了'), ('cancelled', 'キャンセル')], default='pending', max_length=20)),
                ('reason', models.TextField()),
                ('bank_name', models.CharField(blank=True, max_length=255)),
                ('branch_name', models.CharField(blank=True, max_length=255)),
                ('account_type', models.CharField(blank=True, max_length=10)),
                ('account_number', models.CharField(blank=True, max_length=20)),
                ('account_holder', models.CharField(blank=True, max_length=255)),
                ('admin_notes', models.TextField(blank=True)),
                ('processing_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_refunds', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refund_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseID',
            fields=[
                ('id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('prices', models.JSONField(default=list)),
                ('name', models.CharField(max_length=255)),
                ('issuer', models.CharField(max_length=255)),
                ('is_strict', models.BooleanField(default=True)),
                ('color_main', models.CharField(blank=True, max_length=6)),
                ('color_sub', models.CharField(blank=True, max_length=6)),
                ('face_image_url', models.URLField(blank=True)),
                ('header_image_url', models.URLField(blank=True)),
                ('video_url', models.URLField(blank=True)),
                ('video_play_time', models.IntegerField(default=0)),
                ('ad_image_url', models.URLField(blank=True)),
                ('ad_redirect_url', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('access_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.apiaccesskey')),
                ('brands', models.ManyToManyField(related_name='purchase_ids', to='core.brand')),
            ],
        ),
        migrations.CreateModel(
            name='PromotionMail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('target_area', models.CharField(blank=True, choices=[('kitashinchi', '北新地'), ('minami', 'ミナミ'), ('shibuya', '渋谷'), ('ginza', '銀座'), ('omotesando', '表参道')], max_length=20, null=True)),
                ('target_user_rank', models.CharField(blank=True, choices=[('bronze', 'ブロンズ'), ('silver', 'シルバー'), ('gold', 'ゴールド'), ('platinum', 'プラチナ'), ('diamond', 'ダイヤモンド')], max_length=20, null=True)),
                ('send_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('recipients_count', models.IntegerField(default=0)),
                ('sent_count', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('draft', '下書き'), ('pending', '送信待ち'), ('sending', '送信中'), ('sent', '送信完了'), ('failed', '送信失敗')], default='draft', max_length=20)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promotion_mails', to='core.store')),
            ],
        ),
        migrations.CreateModel(
            name='PointTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField()),
                ('status', models.CharField(choices=[('pending', '処理中'), ('completed', '完了'), ('failed', '失敗'), ('cancelled', 'キャンセル')], default='pending', max_length=20)),
                ('message', models.TextField(blank=True)),
                ('transfer_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_transfers', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_transfers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('point_received', 'ポイント受取'), ('point_transfer', 'ポイント転送'), ('gift_exchange', 'ギフト交換'), ('store_registration', '店舗登録'), ('promotion', 'プロモーション'), ('system', 'システム通知')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('is_sent', models.BooleanField(default=False)),
                ('email_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GiftPurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.CharField(max_length=40, unique=True)),
                ('gift_code', models.CharField(max_length=50, unique=True)),
                ('gift_url', models.URLField()),
                ('price', models.IntegerField()),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('commission', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('commission_tax', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('currency', models.CharField(default='JPY', max_length=3)),
                ('status', models.CharField(choices=[('pending', '処理中'), ('completed', '完了'), ('failed', '失敗'), ('expired', '期限切れ')], default='pending', max_length=20)),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('gift_exchange', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.giftexchange')),
                ('purchase_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.purchaseid')),
            ],
        ),
        migrations.CreateModel(
            name='SecurityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('LOGIN_SUCCESS', 'ログイン成功'), ('LOGIN_FAILURE', 'ログイン失敗'), ('BLOCKED_IP_ACCESS', 'ブロックIPアクセス'), ('RATE_LIMIT_EXCEEDED', 'レート制限超過'), ('ANOMALY_DETECTED', '異常検知'), ('IP_BLOCKED', 'IPブロック'), ('FRAUD_ATTEMPT', '不正試行'), ('ACCOUNT_LOCKED', 'アカウントロック'), ('SUSPICIOUS_ACTIVITY', '不審な活動')], max_length=30)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('request_path', models.CharField(blank=True, max_length=255)),
                ('request_data', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('additional_data', models.JSONField(blank=True, default=dict)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['event_type', 'timestamp'], name='core_securi_event_t_195db6_idx'), models.Index(fields=['ip_address', 'timestamp'], name='core_securi_ip_addr_7d786f_idx'), models.Index(fields=['user', 'timestamp'], name='core_securi_user_id_9621f9_idx')],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('CREATE', '作成'), ('UPDATE', '更新'), ('DELETE', '削除'), ('ACCESS', 'アクセス'), ('EXPORT', 'エクスポート'), ('IMPORT', 'インポート'), ('ADMIN_ACTION', '管理者アクション')], max_length=20)),
                ('object_type', models.CharField(max_length=50)),
                ('object_id', models.CharField(blank=True, max_length=100)),
                ('changes', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'timestamp'], name='core_auditl_user_id_7b678c_idx'), models.Index(fields=['action_type', 'timestamp'], name='core_auditl_action__64f4df_idx'), models.Index(fields=['object_type', 'timestamp'], name='core_auditl_object__49c4a9_idx')],
            },
        ),
        migrations.CreateModel(
            name='APIRateLimit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('request_count', models.IntegerField(default=0)),
                ('window_start', models.DateTimeField()),
                ('access_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.apiaccesskey')),
            ],
            options={
                'unique_together': {('access_key', 'ip_address')},
            },
        ),
    ]
