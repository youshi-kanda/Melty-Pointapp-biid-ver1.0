# PostgreSQL + Redis for BIID Point App
# Usage: docker-compose -f docker-compose.postgresql.yml up -d

version: '3.8'

services:
  postgresql:
    image: postgres:15
    container_name: biid-postgresql
    environment:
      POSTGRES_DB: biid_production
      POSTGRES_USER: biid_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-biid_secure_password_2024}
      POSTGRES_HOST_AUTH_METHOD: md5
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U biid_user -d biid_production"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - biid-network

  redis:
    image: redis:7-alpine
    container_name: biid-redis
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - biid-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: biid-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@biid.app
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin_password_2024}
      PGADMIN_LISTEN_PORT: 80
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "8080:80"
    depends_on:
      - postgresql
    restart: unless-stopped
    networks:
      - biid-network

volumes:
  postgresql_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  biid-network:
    driver: bridge